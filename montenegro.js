// Montenegro server library | Spencer Tipping
// Licensed under the terms of the MIT source code license

// Introduction.
// Montenegro extends Caterwaul (http://spencertipping.com/caterwaul) to operate in a node.js environment and provide REST web services. It provides asynchronous connectors, stream transformers,
// URL routing, and some other utilities that make non-blocking servers easier to develop.

montenegro = caterwaul.clone('std', function () {

// Asynchronous connectors.
// Connecting asynchronous services is generally a pain. You have to forward the 'data' and 'end' continuations (if they're named as they are in node.js) and manage bindings (meaning that you
// probably can't eta-reduce). Montenegro provides macros for this:

// | request >on('data')|write> response           // -> request.on('data', fn_[response.write(data)])
//   request >on('end')|end>    response           // -> request.on('end',  fn_[response.end()])

// You can also specify chains like this:

// | montenegro.chain('http', fn[c1, c2][c1 >on('data')|write> c2, c1 >on('end')|end> c2]);
//   request <cps(http)> response;



});

// Generated by SDoc 
