Montenegro web framework.
Montenegro consists of two files, montenegro.client.js and montenegro.server.js.

Server-side library.
The server is basically a wrapper around the node.js HTTP listener that gives you higher-level ways to define functions. For instance, you can create an RPC endpoint this way:

  // Creating a server automatically starts it
  var server = caterwaul.montenegro.server(8080);
  server.rpc('/hi', function (name) {this('Hi there, ' + name)});

The corresponding client connector looks like this:

  var hi = caterwaul.montenegro.rpc('/hi');
  hi('Bob', function (greeting) {alert(greeting)});

You can also:

  1. Serve a directory as static files: server.file('/url', 'directory')
  2. Serve a page with some client code: server.html('/testpage', qs[$('body').append( html<< h1('Hello world'))]);
  3. Handle a request with a regular function: server.on('/custom', 'GET', function (request, response) {...});

See the applications in test/ for some examples of how to use it. (Also check out the sdoc.html page -- available online at http://spencertipping.com/montenegro/sdoc.html -- which goes over
many details and edge cases.)
