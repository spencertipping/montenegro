Client-side Montenegro/jQuery bindings | Spencer Tipping
Licensed under the terms of the MIT source code license

Introduction.
Montenegro works with jQuery to add structure to user interfaces and define useful shorthands for common cases.

  montenegro =

Event bindings.
Montenegro specifies syntax for binding events through jQuery. For example, instead of writing this:

| $('selector').live('click', fn_[...]);

You can write this instead:

| 'selector' >jqc> ...;

  caterwaul.tconfiguration('std', 'montenegro.jquery.event', function () {
    this.rmacro(qs[_ >jqc> _], fn[selector, handler][qs[$(_selector).live('click', fn_[_handler, where[t = $(this)]])].replace({_selector: selector, _handler: handler}),
                                                     when[selector.is_string()]])}).

Cloning.
A common pattern is to create a 'templates' container to contain structural templates for things, then define invertible functions to (1) render those templates from server-side data, and then
(2) serialize their state back into logical data objects. The replicate() function is the beginning of that process.



Final configuration.

  configuration('montenegro.jquery', function () {this.configure('montenegro.jquery.event')}).clone('montenegro.jquery');
