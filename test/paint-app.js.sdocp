sdocp('sdoc::js::test/paint-app', 'Collaborative paint test application\n\ncaterwaul.clone(\'std seq montenegro\')(function () {\n  let[connections = seq[~[]]] in\n  caterwaul.montenegro.server(8080) /se[\n    _.rpc(\'/listen\', fn_[connections.push(this)]).rpc(\'/send\', fn[message][seq[connections *![_(message)]], connections = seq[~[]], this(\'OK\')]),\n\n    _.html(\'/\', qs[caterwaul.montenegro.rpc(\'/listen\')(fn[message][this() /se[$(\'canvas\')[0].getContext(\'2d\') /se[_.moveTo(message.x1, message.y1), _.strokeStyle = message.color || \'#35a\',\n                                                                                                                  _.lineTo(message.x2, message.y2), _.stroke()]]]),\n                   let[send = caterwaul.montenegro.rpc(\'/send\')] in\n                   $(\'body\').append(let[x = 0, y = 0, adjust(e) = let[o = $(\'canvas\').offset()] in e /se[_.real_x = _.pageX - o.left, _.real_y = _.pageY - o.top]] in \n                     html[canvas /css({border: \'solid 1px #888\'})\n                                 /mousedown(fn[e][adjust(e), x = e.real_x, y = e.real_y])\n                                 /mousemove(fn[e][adjust(e), send({x1: x, y1: y, x2: x = e.real_x, y2: y = e.real_y}), when[x || y]])\n                                 /mouseup  (fn[e][x = y = 0])])])]})();\n');